<resources>
    <string name="app_name">Android5Things</string>
    <string name="PragmaticProgrammerTitle">The Pragmatic Programmer: From Journeyman to Master</string>
    <string name="PragmaticProgrammerShortTitle">Pragmatic Programmer</string>
    <string name="PragmaticProgrammerDescription">The Pragmatic Programmer cuts through the increasing specialization and technicalities of modern software development to examine the core process--taking a requirement and producing working, maintainable code that delights its users. It covers topics ranging from personal responsibility and career development to architectural techniques for keeping your code flexible and easy to adapt and reuse</string>
    <string name="EssentialScrumTitle">Essential Scrum: A Practical Guide to the Most Popular Agile Process</string>
    <string name="EssentialScrumShortTitle">Essential Scrum</string>
    <string name="EssentialScrumDescription">If you want to use Scrum to develop innovative products and services that delight your customers, Essential Scrum is the complete, single-source reference you’ve been searching for. Leading Scrum coach and trainer Kenny Rubin illuminates the values, principles, and practices of Scrum, and describes flexible, proven approaches that can help you implement it far more effectively.</string>
    <string name="MythicalManTitle">The Mythical Man-Month: Essays on Software Engineering, Anniversary Edition</string>
    <string name="MythicalManShortTitle">Mythical Man-Month</string>
    <string name="MythicalManDescription">Few books on software project management have been as influential and timeless as The Mythical Man-Month. With a blend of software engineering facts and thought-provoking opinions, Fred Brooks offers insight for anyone managing complex projects. These essays draw from his experience as project manager for the IBM System/360 computer family and then for OS/360, its massive software system. Now, 20 years after the initial publication of his book, Brooks has revisited his original ideas and added new thoughts and advice, both for readers already familiar with his work and for readers discovering it for the first time.</string>
    <string name="RefactoringTitle">Refactoring: Improving the Design of Existing Code</string>
    <string name="RefactoringShortTitle">Refactoring</string>
    <string name="RefactoringDescription">As the application of object technology--particularly the Java programming language--has become commonplace, a new problem has emerged to confront the software development community. Significant numbers of poorly designed programs have been created by less-experienced developers, resulting in applications that are inefficient and hard to maintain and extend. Increasingly, software system professionals are discovering just how difficult it is to work with these inherited, non-optimal applications. For several years, expert-level object programmers have employed a growing collection of techniques to improve the structural integrity and performance of such existing software programs. Referred to as refactoring, these practices have remained in the domain of experts because no attempt has been made to transcribe the lore into a form that all developers could use. . .until now. In Refactoring: Improving the Design of Existing Software, renowned object technology mentor Martin Fowler breaks new ground, demystifying these master practices and demonstrating how software practitioners can realize the significant benefits of this new process.</string>
    <string name="KanBanTitle">Kanban: Successful Evolutionary Change for Your Technology Business</string>
    <string name="KanBanShortTitle">Kanban</string>
    <string name="KanBanDescription">Kanban is becoming a popular way to visualize and limit work-in-progress in software development and information technology work. Teams around the world are adding kanban around their existing processes to catalyze cultural change and deliver better business agility. This book answers the questions: What is Kanban? Why would I want to use Kanban? How do I go about implementing Kanban? How do I recognize improvement opportunities and what should I do about them?</string>
    <string name="SprintTitle">Sprint: How to Solve Big Problems and Test New Ideas in Just Five Days</string>
    <string name="SprintShortTitle">Sprint</string>
    <string name="SprintDescription">From three partners at Google Ventures, a unique five-day process for solving tough problems, proven at more than a hundred companies. Entrepreneurs and leaders face big questions every day: What’s the most important place to focus your effort, and how do you start? What will your idea look like in real life? How many meetings and discussions does it take before you can be sure you have the right solution?</string>
</resources>
