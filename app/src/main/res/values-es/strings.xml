<resources>
    <string name="app_name">Android5Things</string>
    <string name="PragmaticProgrammerDescription">The Pragmatic Programmer corta a través de la creciente especialización y aspectos técnicos de desarrollo de software moderno para examinar el proceso central - tomar un requisito y la producción de trabajo, código mantenible que deleita a sus usuarios. Cubre temas que van desde la responsabilidad personal y el desarrollo profesional de las técnicas arquitectónicas para mantener su código flexible y fácil de adaptar y reutilización</string>
    <string name="EssentialScrumDescription">Si desea utilizar Scrum para desarrollar productos y servicios que encantan a sus clientes innovadores, Scrum esencial es la completa, la referencia de una sola fuente que ha estado buscando. Que conduce el entrenador Scrum y entrenador Kenny Rubin ilumina los valores, principios y prácticas de Scrum, y describe, enfoques probados flexibles que pueden ayudar a ponerla en práctica con mucha más eficacia.</string>
    <string name="MythicalManDescription">Pocos libros sobre gestión de proyectos de software han sido tan influyentes y atemporal como el mes laboral mítico. Con una mezcla de hechos de ingeniería de software y opiniones que hacen reflexionar, Fred Brooks ofrece una visión para nadie gestión de proyectos complejos. Estos ensayos se basan en su experiencia como director del proyecto para el Sistema / 360 de IBM familia de computadora y luego para OS / 360, el sistema de software masiva. Ahora, 20 años después de la primera publicación de su libro, Brooks ha vuelto a sus ideas originales y añadido nuevos pensamientos y consejos, tanto para los lectores ya están familiarizados con su trabajo y para uso de descubrirlo por primera vez.</string>
    <string name="RefactoringDescription">A medida que la aplicación de la tecnología de objetos - en particular el lenguaje de programación Java - se ha convertido en un lugar común, un nuevo problema ha surgido para hacer frente a la comunidad de desarrollo de software. Un número importante de programas mal diseñados han sido creados por los desarrolladores con menos experiencia, lo que resulta en aplicaciones que son ineficientes y difíciles de mantener y extender. Cada vez más, los profesionales del sistema de software están descubriendo lo difícil que es trabajar con estas aplicaciones heredadas, no óptimas. Desde hace varios años, los programadores de objetos a nivel de expertos han empleado una colección cada vez mayor de técnicas para mejorar la integridad estructural y ejecución de dichos programas de software existentes. Conocida como la refactorización, estas prácticas han permanecido en el ámbito de los expertos, porque se ha hecho ningún intento para transcribir la tradición en una forma que todos los desarrolladores podrían utilizar. . .hasta ahora. En Refactoring: mejorar el diseño de software existentes, reconocido mentor de la tecnología de objetos Martin Fowler abre un nuevo camino, desmitificar estas prácticas maestros y demostrar cómo los profesionales de software pueden obtener los beneficios significativos de este nuevo proceso.</string>
    <string name="KanBanDescription">Kanban se está convirtiendo en una forma popular para visualizar y limitar el trabajo en progreso en el desarrollo de software y tecnología de la información de trabajo. Equipos de todo el mundo están agregando Kanban en torno a sus procesos existentes para catalizar el cambio cultural y ofrecer una mejor agilidad del negocio. Este libro responde a las preguntas: ¿Qué es Kanban? ¿Por qué querría utilizar Kanban? ¿Cómo hago para implementar Kanban? ¿Cómo puedo reconocer las oportunidades de mejora y qué debo hacer al respecto?</string>
    <string name="SprintDescription">De tres socios de Google Ventures, un proceso único de cinco días para resolver problemas difíciles, probada en más de un centenar de empresas. Los empresarios y los líderes se enfrentan a grandes preguntas todos los días: ¿Cuál es el lugar más importante para enfocar su esfuerzo, y, ¿cómo empezar? ¿Cuál será su idea de verse como en la vida real? ¿Cuántas reuniones y discusiones se tarda antes de que pueda asegurarse de que tiene la solución adecuada?</string>
</resources>